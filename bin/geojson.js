const axios = require('axios')
const fs = require('fs')
const api = 'https://www.mocaspike150.org/api'

const feature = (d) => ({
  "type": "Feature",
  "geometry": {
    "type": "Point",
    "coordinates": [
      d[0],
      d[1]
    ]
  }
})

console.log(`
# Geo location data for MOCA Spike 150 clubs

- Files in this folder are generated by [script](package.json). Please do not edit them.

- To find a geolocation of a place, please use http://geojson.io

- To visual check the clubs on the map and the geojson data, go to https://observablehq.com/@ontouchstart/clubs-on-the-map

## Club data

`)

const profile = 'club/profile.json'
const geo = 'map/club/geo.json'

const build = (profile, geo) => {
  axios.get(`${api}/${profile}`).
    then( (res) => {
      let profile_data = res.data
      axios.get(`${api}/${geo}`)
        .then( (res) => {
          let geo_data = res.data
          for( k in profile_data) {
            let strava = `https://www.strava.com/clubs/${k}`
            if( k in geo_data){
               let geojson = {
                 "type": "FeatureCollection",
                 "features": geo_data[k].map(feature)
               }
               let output = JSON.stringify(geojson)
               let fn = `map/club/${k}.geojson`
               console.log(` - [x]${strava} ${profile_data[k].en} ${profile_data[k].cn} [${k}.geojson](${k}.geojson) (edit [_data/club/geo/${k}.yml](https://github.com/mocaspike150/api/edit/master/_data/club/geo/${k}.yml))`)
               fs.writeFile(`map/club/${k}.geojson`, output, () => {})
            }
            else {
               console.log(`- [ ] ${strava} ${profile_data[k].en} ${profile_data[k].cn} (create [_data/club/geo/${k}.yml](https://github.com/mocaspike150/api/new/master/_data/club/geo/))`)
            }
          }
    })
  .catch((error) => { console.log(error) });
    })
  .catch((error) => { console.log(error) });
}

build(profile, geo)
